/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bo.edu.uagrm.ficct.inf310.mib.formularios;

import bo.edu.uagrm.ficct.inf310sb.mib.grafos.excepciones.*;
import bo.edu.uagrm.ficct.inf310sb.mib.grafos.nopesados.BFS;
import bo.edu.uagrm.ficct.inf310sb.mib.grafos.nopesados.DFS;
import bo.edu.uagrm.ficct.inf310sb.mib.grafos.nopesados.Digrafo;
import bo.edu.uagrm.ficct.inf310sb.mib.grafos.nopesados.Grafo;
import bo.edu.uagrm.ficct.inf310sb.mib.grafos.nopesados.MetodosPracticoDigrafo;
import bo.edu.uagrm.ficct.inf310sb.mib.grafos.nopesados.MetodosPracticoGrafo;
import bo.edu.uagrm.ficct.inf310sb.mib.grafos.pesado.DigrafoPesado;
import bo.edu.uagrm.ficct.inf310sb.mib.grafos.pesado.MetodosDigrafoPesado;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author HP 240 G5
 */
public class Transporte extends javax.swing.JFrame {

    /**
     * Creates new form Transporte
     */
    public Transporte()throws ExcepcionNroVerticesInvalido, ExcepcionNroVerticesInvalido_1 {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem6 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();

        jMenuItem6.setText("jMenuItem6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\UniSem2-2020\\Programas ED2\\Proyecto\\Graficos\\mutunTransporte2.jpg")); // NOI18N
        jLabel1.setText("jLabel1");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jMenu1.setText("Grafo");

        jMenuItem1.setText("Iniciar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Nuevo Vertice");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Nueva Conexion");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem10.setText("Eliminar Vertice");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuItem11.setText("Eliminar Conexi√≥n");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem11);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Menu");

        jMenuItem4.setText("Rutas");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem7.setText("Recorrido desde un punto");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem8.setText("Rutas a un punto");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem9.setText("Ruta a partir de un punto");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem12.setText("Verificar conexion");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        MetodosPracticoDigrafo  metodosD=new MetodosPracticoDigrafo();
        MetodosDigrafoPesado  metodosDP=new MetodosDigrafoPesado();
        Digrafo grafoT=new Digrafo(13);
        DigrafoPesado grafoTPesado= new DigrafoPesado(13);
        BFS  bfs;
        DFS  dfs; 
        
     private void CrearDigrafoT() throws ExcepcionNroVerticesInvalido_1, ExcepcionAristaYaExiste{
         grafoT.insertarArista(0, 1);
        grafoT.insertarArista(2, 1);
        grafoT.insertarArista(1, 3);
        grafoT.insertarArista(1,6 );
        grafoT.insertarArista(0, 3);
        grafoT.insertarArista(2,5);
        grafoT.insertarArista(4,3);
        grafoT.insertarArista(4,8);
        grafoT.insertarArista(6,5);
        grafoT.insertarArista(6,7);
        grafoT.insertarArista(7,8);
        
         grafoT.insertarArista(9,12);
         grafoT.insertarArista(12,9);
         grafoT.insertarArista(9,10);
         grafoT.insertarArista(9,11);
         grafoT.insertarArista(10,9);
         grafoT.insertarArista(11,9);
         
         grafoTPesado.insertarArista(0, 1, 120);
         grafoTPesado.insertarArista(2,1,100);
         grafoTPesado.insertarArista(1,3 ,118 );
         grafoTPesado.insertarArista(1,6 ,80 );
         grafoTPesado.insertarArista(0,3, 40);
         grafoTPesado.insertarArista(2,5,20);
         grafoTPesado.insertarArista(4,3,100);
         grafoTPesado.insertarArista(4,8,90);
         grafoTPesado.insertarArista(6,5,35);
         grafoTPesado.insertarArista(6,7,70);
         grafoTPesado.insertarArista(7,8,25);
         
         grafoTPesado.insertarArista(9,12 ,310 );
         grafoTPesado.insertarArista(9,11,430);
         grafoTPesado.insertarArista(9,10,350);
         grafoTPesado.insertarArista(12,9,310 );
         grafoTPesado.insertarArista(11,9 ,430 );
         grafoTPesado.insertarArista(10,9,350);
         
}
    private void verticeInvalido(int vertice){
        if(vertice>= grafoT.cantidadDeVertices()){
        JOptionPane.showMessageDialog(null,"Vertice invalido. Insertar un vertice menor a "
                                        + grafoT.cantidadDeVertices());
        }
        
    }
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            try {
                // TODO add your handling code here:

                CrearDigrafoT();
            } catch (ExcepcionAristaYaExiste ex) {
                Logger.getLogger(Transporte.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ExcepcionNroVerticesInvalido_1 ex) {
            Logger.getLogger(Transporte.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(null,"Grafo creado exitosamente");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
       
        String cad;
        int cant= metodosD.cantIslasDi(grafoT);

        cad="Hay " + cant+" rutas independientes" +"\n"
                + metodosD.componentesDeIslasDigrafo(grafoT);
                
        this.jTextArea1.setText(cad);
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        String vertInicio= JOptionPane.showInputDialog("Escribir desde que vertice se desea ver los posibles caminos");
        this.verticeInvalido(Integer.parseInt(vertInicio));
        String cad= metodosD.caminoConVertice(grafoT, Integer.parseInt(vertInicio));
        this.jTextArea1.setText(cad);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
      
        //caminos desde un punto
         String posInicio= JOptionPane.showInputDialog("Escribe desde que posicion desea iniciar el recorrido");
            this.verticeInvalido(Integer.parseInt(posInicio));
          bfs= new BFS(grafoT,Integer.parseInt(posInicio));
          dfs= new DFS(grafoT, Integer.parseInt(posInicio));
        this.jTextArea1.setText("El recorrido BFS es: "+ bfs.elRecorrido()+ "\n"
                        + "El recorrido DFS es: "+ dfs.elRecorrido()+"\n");
        
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
       //caminos a un punto
       String posVertice= JOptionPane.showInputDialog("Escribe el vertice del"
                                          + " cual desea ver los posibles caminos");
       this.verticeInvalido(Integer.parseInt(posVertice));
       List<Integer> caminos=  metodosD.caminosAVertice(grafoT,Integer.parseInt(posVertice));
       this.jTextArea1.setText("Los posibles caminos a " + posVertice +" son: " + caminos);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
    //insertar
        grafoT.insertarVertice();
        grafoTPesado.insertarVertice();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
      
        //verificar conexion
        String vertInicio= JOptionPane.showInputDialog("Escribir el vertice de origen");
        this.verticeInvalido(Integer.parseInt(vertInicio));
        String vertDestino= JOptionPane.showInputDialog("Escribir el vertice de destino");
        this.verticeInvalido(Integer.parseInt(vertDestino));
        int [][] matrizWarshall= metodosD.matrizWarshall(grafoT);
        this.jTextArea1.setText(
              metodosD.verificarConexion(matrizWarshall, Integer.parseInt(vertInicio),Integer.parseInt(vertDestino)));
        
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        
        //nuevaConexi√≥n
          String posInicio= JOptionPane.showInputDialog("Insertar origen");
        this.verticeInvalido(Integer.parseInt(posInicio));
        String posDestino= JOptionPane.showInputDialog("Insertar destino");
        this.verticeInvalido(Integer.parseInt(posDestino));
        String peso= JOptionPane.showInputDialog("Insertar peso");
        try {
            grafoT.insertarArista(Integer.parseInt(posInicio),Integer.parseInt( posDestino));
        } catch (ExcepcionNroVerticesInvalido_1 ex) {
            Logger.getLogger(Agua.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            grafoTPesado.insertarArista(Integer.parseInt(posInicio),
                        Integer.parseInt( posDestino), Integer.parseInt(peso));
        } catch (ExcepcionAristaYaExiste ex) {
            Logger.getLogger(Agua.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        //eliminar vertice
          String vertice= JOptionPane.showInputDialog("Vertice a eliminar");
        this.verticeInvalido(Integer.parseInt(vertice));
        grafoT.eliminarVertice(Integer.parseInt(vertice));
        grafoTPesado.eliminarVertice(Integer.parseInt(vertice));
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        //eliminar conexion
            String posInicio= JOptionPane.showInputDialog("Insertar Origen");
        this.verticeInvalido(Integer.parseInt(posInicio));
        String posDestino= JOptionPane.showInputDialog("Insertar Destino");
        this.verticeInvalido(Integer.parseInt(posDestino));
       grafoT.eliminarArista(Integer.parseInt( posInicio), Integer.parseInt( posDestino));
        try {
            grafoTPesado.eliminarArista(Integer.parseInt( posInicio),
                    Integer.parseInt( posDestino));
        } catch (ExcepcionAristaNoExiste ex) {
            Logger.getLogger(Agua.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Transporte().setVisible(true);
                } catch (ExcepcionNroVerticesInvalido ex) {
                    Logger.getLogger(Transporte.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ExcepcionNroVerticesInvalido_1 ex) {
                    Logger.getLogger(Transporte.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
